{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trevis\\\\Documents\\\\github\\\\billing-system\\\\src\\\\components\\\\NewItem.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      name: '',\n      qty: ''\n    };\n    this.handleIdChange = this.handleIdChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleQtyChange = this.handleQtyChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  } // TODO: Must query database\n\n\n  handleIdChange(e) {\n    // e is the event object\n    // e.target returns the element that triggered the event\n    // In this case, value is the attribute of the element that triggered the event\n    this.setState({\n      id: e.target.value\n    });\n  }\n\n  handleNameChange(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleQtyChange(e) {\n    this.setState({\n      qty: e.target.value\n    });\n  }\n\n  handleInput(e, field) {\n    this.setState({\n      [field]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    // Use the property function received from the Invoice component to update its items array. The Invoice\n    // component will then pass the updated array as a property to List for rendering \n    this.props.addItem({\n      id: this.state.id,\n      name: this.state.name,\n      price: 50,\n      // TODO: Must remove this placeholder price value\n      qty: this.state.qty\n    }); // Reset state for the next item to be added\n\n    this.setState({\n      id: '',\n      name: '',\n      qty: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-item-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), Object.keys(this.state).map(entry => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: entry.toUpperCase(),\n        value: this.state[entry],\n        onChange: e => this.handleInput(e, entry)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 30\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add\",\n        className: \"add\",\n        onClick: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NewItem;","map":{"version":3,"names":["React","NewItem","Component","constructor","props","state","id","name","qty","handleIdChange","bind","handleNameChange","handleQtyChange","handleSubmit","handleInput","e","setState","target","value","field","addItem","price","render","Object","keys","map","entry","toUpperCase"],"sources":["C:/Users/Trevis/Documents/github/billing-system/src/components/NewItem.js"],"sourcesContent":["import React from \"react\";\r\n\r\nclass NewItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            qty: '',\r\n        }\r\n\r\n        this.handleIdChange = this.handleIdChange.bind(this)\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.handleQtyChange = this.handleQtyChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n        this.handleInput = this.handleInput.bind(this)\r\n    }\r\n\r\n    // TODO: Must query database\r\n\r\n    handleIdChange(e) {\r\n        // e is the event object\r\n        // e.target returns the element that triggered the event\r\n        // In this case, value is the attribute of the element that triggered the event\r\n        this.setState({id: e.target.value})\r\n    }\r\n\r\n    handleNameChange(e) {\r\n        this.setState({name: e.target.value})\r\n    }\r\n\r\n    handleQtyChange(e) {\r\n        this.setState({qty: e.target.value})\r\n    }\r\n\r\n    handleInput(e, field) {\r\n        this.setState({\r\n            [field]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        // Use the property function received from the Invoice component to update its items array. The Invoice\r\n        // component will then pass the updated array as a property to List for rendering \r\n        this.props.addItem({\r\n            id: this.state.id,\r\n            name: this.state.name,\r\n            price: 50,  // TODO: Must remove this placeholder price value\r\n            qty: this.state.qty\r\n        })\r\n\r\n        // Reset state for the next item to be added\r\n        this.setState({\r\n            id: '',\r\n            name: '',\r\n            qty: ''\r\n        })\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <div className='add-item-container'>\r\n                {/* <h2>{this.state.name === '' ? 'Add Item' : this.state.name + ' | ' + this.state.id}</h2> */}\r\n                <h2>Add Item</h2>\r\n                {/* <input type='text' placeholder='Product ID' value={this.state.id} onChange={this.handleIdChange} required />\r\n                <input type='text' placeholder='Product Name' value={this.state.name} onChange={this.handleNameChange} required />\r\n                <input type='text' placeholder='Quantity' value={this.state.qty} onChange={this.handleQtyChange}/> */}\r\n                {Object.keys(this.state).map(\r\n                    entry => <input type=\"text\" placeholder={entry.toUpperCase()} value={this.state[entry]} onChange={(e) => this.handleInput(e, entry)} />\r\n                )}\r\n                <input type='submit' value='Add' className='add' onClick={this.handleSubmit}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;EAClCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACTC,EAAE,EAAE,EADK;MAETC,IAAI,EAAE,EAFG;MAGTC,GAAG,EAAE;IAHI,CAAb;IAMA,KAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;IACA,KAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;IACA,KAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;IACA,KAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;IAEA,KAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;EACH,CAhBiC,CAkBlC;;;EAEAD,cAAc,CAACM,CAAD,EAAI;IACd;IACA;IACA;IACA,KAAKC,QAAL,CAAc;MAACV,EAAE,EAAES,CAAC,CAACE,MAAF,CAASC;IAAd,CAAd;EACH;;EAEDP,gBAAgB,CAACI,CAAD,EAAI;IAChB,KAAKC,QAAL,CAAc;MAACT,IAAI,EAAEQ,CAAC,CAACE,MAAF,CAASC;IAAhB,CAAd;EACH;;EAEDN,eAAe,CAACG,CAAD,EAAI;IACf,KAAKC,QAAL,CAAc;MAACR,GAAG,EAAEO,CAAC,CAACE,MAAF,CAASC;IAAf,CAAd;EACH;;EAEDJ,WAAW,CAACC,CAAD,EAAII,KAAJ,EAAW;IAClB,KAAKH,QAAL,CAAc;MACV,CAACG,KAAD,GAASJ,CAAC,CAACE,MAAF,CAASC;IADR,CAAd;EAGH;;EAEDL,YAAY,CAACE,CAAD,EAAI;IACZ;IACA;IACA,KAAKX,KAAL,CAAWgB,OAAX,CAAmB;MACfd,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADA;MAEfC,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAFF;MAGfc,KAAK,EAAE,EAHQ;MAGH;MACZb,GAAG,EAAE,KAAKH,KAAL,CAAWG;IAJD,CAAnB,EAHY,CAUZ;;IACA,KAAKQ,QAAL,CAAc;MACVV,EAAE,EAAE,EADM;MAEVC,IAAI,EAAE,EAFI;MAGVC,GAAG,EAAE;IAHK,CAAd;EAKH;;EAEDc,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,oBAAf;MAAA,wBAEI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,EAMKC,MAAM,CAACC,IAAP,CAAY,KAAKnB,KAAjB,EAAwBoB,GAAxB,CACGC,KAAK,iBAAI;QAAO,IAAI,EAAC,MAAZ;QAAmB,WAAW,EAAEA,KAAK,CAACC,WAAN,EAAhC;QAAqD,KAAK,EAAE,KAAKtB,KAAL,CAAWqB,KAAX,CAA5D;QAA+E,QAAQ,EAAGX,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB,EAAoBW,KAApB;MAAhG;QAAA;QAAA;QAAA;MAAA,QADZ,CANL,eASI;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC,KAA3B;QAAiC,SAAS,EAAC,KAA3C;QAAiD,OAAO,EAAE,KAAKb;MAA/D;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAaH;;AAzEiC;;AA4EtC,eAAeZ,OAAf"},"metadata":{},"sourceType":"module"}